/*
--    관리자 계정에서 MECENAT 계정 생성, 권한 부여
--    CREATE USER MECENAT IDENTIFIED BY MECENAT;
--    GRANT CONNECT, RESOURCE TO MECENAT;
*/

DROP TABLE REVIEW CASCADE CONSTRAINTS;
DROP TABLE RENTSYSTEM CASCADE CONSTRAINTS;
DROP TABLE SEAT CASCADE CONSTRAINTS;
DROP TABLE PURCHASE CASCADE CONSTRAINTS;
DROP TABLE PAYMENT CASCADE CONSTRAINTS;
DROP TABLE RENTAPPLICATION CASCADE CONSTRAINTS;
DROP TABLE PERFORMANCE CASCADE CONSTRAINTS;
DROP TABLE HALL CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;

DROP SEQUENCE SEQ_MNO;
DROP SEQUENCE SEQ_PERFONO;
DROP SEQUENCE SEQ_RENTALNO;
DROP SEQUENCE SEQ_SEATNO;
DROP SEQUENCE SEQ_PAYNO;
DROP SEQUENCE SEQ_PURCHASENO;
DROP SEQUENCE SEQ_REVIEWNO;

--------------------------------------------------
----------------  회원 관련	 ---------------------
--------------------------------------------------
CREATE TABLE MEMBER (
	USER_ID	    VARCHAR2(30) PRIMARY KEY,
    USER_PWD	VARCHAR2(100) NOT NULL,
	USER_NAME	VARCHAR2(15) NOT NULL,
	USER_PHONE	VARCHAR2(30) NOT NULL UNIQUE,
    USER_EMAIL	VARCHAR2(100) NOT NULL UNIQUE,
	USER_GRADE  VARCHAR2(10) DEFAULT '회원' CHECK (USER_GRADE IN('회원','관리자')),
	ENROLL_DATE	DATE DEFAULT SYSDATE,
    UPDATE_DATE DATE NULL,
	STATUS	VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N'))
);
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.USER_PHONE IS '핸드폰번호';
COMMENT ON COLUMN MEMBER.USER_EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.USER_GRADE IS '회원등급';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.UPDATE_DATE IS '회원수정일';
COMMENT ON COLUMN MEMBER.STATUS IS '회원등록여부(Y/N)';

CREATE SEQUENCE SEQ_MNO
NOCACHE;

--------------------------------------------------
----------------  공연홀 관련	 ---------------------
--------------------------------------------------
CREATE TABLE HALL (
	HALL_NAME	VARCHAR2(50) PRIMARY KEY,
	HALL_SEATS	NUMBER NOT NULL,
	HALL_LOCATION VARCHAR2(30) NULL
);
COMMENT ON COLUMN HALL.HALL_NAME IS '공연홀이름';
COMMENT ON COLUMN HALL.HALL_SEATS IS '공연홀 총 좌석수';
COMMENT ON COLUMN HALL.HALL_LOCATION IS '공연홀위치';

--------------------------------------------------
----------------  대관신청서 관련	 -----------------
--------------------------------------------------
CREATE TABLE RENTAPPLICATION (
	RENTAL_CODE NUMBER PRIMARY KEY,
	HALL_NAME	VARCHAR2(50) NOT NULL,
	COVENANTEE_NAME	VARCHAR2(20) NOT NULL,
	COVENANTEE_PHONE VARCHAR2(30) NOT NULL,
	AGENT_NAME VARCHAR2(20) NOT NULL,
	AGENT_PHONE	VARCHAR2(30) NOT NULL,
	AGENT_EMAIL	VARCHAR2(50) NOT NULL,
	RENTAL_START_DATE DATE NOT NULL,
	RENTAL_END_DATE	DATE NOT NULL,
	RENTAL_PROPOSE VARCHAR2(40) NOT NULL,
	RENTAL_DATE	DATE DEFAULT SYSDATE,
	APPROVE_STATUS VARCHAR2(20) DEFAULT '승인대기' CHECK (APPROVE_STATUS IN('승인대기','미승인','승인')),
    FOREIGN KEY (HALL_NAME) REFERENCES HALL(HALL_NAME)
);
COMMENT ON COLUMN RENTAPPLICATION.RENTAL_CODE IS '대관예약코드';
COMMENT ON COLUMN RENTAPPLICATION.HALL_NAME IS '공연홀이름';
COMMENT ON COLUMN RENTAPPLICATION.COVENANTEE_NAME IS '대관대표자명';
COMMENT ON COLUMN RENTAPPLICATION.COVENANTEE_PHONE IS '대표자연락처';
COMMENT ON COLUMN RENTAPPLICATION.AGENT_NAME IS '담당자이름';
COMMENT ON COLUMN RENTAPPLICATION.AGENT_PHONE IS '담당자연락처';
COMMENT ON COLUMN RENTAPPLICATION.AGENT_EMAIL IS '담당자메일주소';
COMMENT ON COLUMN RENTAPPLICATION.RENTAL_START_DATE IS '대관시작일';
COMMENT ON COLUMN RENTAPPLICATION.RENTAL_END_DATE IS '대관종료일';
COMMENT ON COLUMN RENTAPPLICATION.RENTAL_PROPOSE IS '대관공연명';
COMMENT ON COLUMN RENTAPPLICATION.RENTAL_DATE IS '대관신청일';
COMMENT ON COLUMN RENTAPPLICATION.APPROVE_STATUS IS '승인여부';

CREATE SEQUENCE SEQ_RENTALNO
NOCACHE;

--------------------------------------------------
----------------  공연 관련	 ---------------------
--------------------------------------------------
CREATE TABLE PERFORMANCE (
	PERFO_NO NUMBER PRIMARY KEY,
    RENTAL_CODE NUMBER NOT NULL,
	PERFO_TITLE	VARCHAR2(200) NOT NULL,
    GENRE_NAME	VARCHAR2(50) NOT NULL,
	PERFO_START_DATE DATE NOT NULL,
	PERFO_END_DATE DATE NOT NULL,
	DIRECTO VARCHAR2(50) NULL,
	CAST VARCHAR2(1000) NULL,
	PERFO_CONTENT VARCHAR2(1000) NULL,
	RUNNING_TIME VARCHAR2(50) NULL,
	AGE_LIMIT NUMBER NULL,
	PERFO_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (PERFO_STATUS IN('Y', 'N')),
	PRICE NUMBER NOT NULL,
    FOREIGN KEY (RENTAL_CODE) REFERENCES RENTAPPLICATION (RENTAL_CODE)
);
COMMENT ON COLUMN PERFORMANCE.PERFO_NO IS '공연번호';
COMMENT ON COLUMN PERFORMANCE.RENTAL_CODE IS '대관예약코드';
COMMENT ON COLUMN PERFORMANCE.PERFO_TITLE IS '제목';
COMMENT ON COLUMN PERFORMANCE.GENRE_NAME IS '장르';
COMMENT ON COLUMN PERFORMANCE.PERFO_START_DATE IS '공연시작날짜';
COMMENT ON COLUMN PERFORMANCE.PERFO_END_DATE IS '공연끝날짜';
COMMENT ON COLUMN PERFORMANCE.DIRECTO IS '총감독';
COMMENT ON COLUMN PERFORMANCE.CAST IS '출연진';
COMMENT ON COLUMN PERFORMANCE.PERFO_CONTENT IS '내용(소개글)';
COMMENT ON COLUMN PERFORMANCE.RUNNING_TIME IS '러닝타임';
COMMENT ON COLUMN PERFORMANCE.AGE_LIMIT IS '연령제한';
COMMENT ON COLUMN PERFORMANCE.PERFO_STATUS IS '상태값';
COMMENT ON COLUMN PERFORMANCE.PRICE IS '공연가격';

CREATE SEQUENCE SEQ_PERFONO
NOCACHE;

--------------------------------------------------
----------------  리뷰 관련	 ---------------------
--------------------------------------------------
CREATE TABLE REVIEW (
	REVIEW_NO NUMBER PRIMARY KEY,
	PERFO_NO NUMBER	NOT NULL UNIQUE,
	CONTENT	VARCHAR2(1000) NULL,
	WRITE_DATE	DATE	DEFAULT SYSDATE	NULL,
    FOREIGN KEY (PERFO_NO) REFERENCES PERFORMANCE (PERFO_NO)
);
COMMENT ON COLUMN REVIEW.REVIEW_NO IS '리뷰고유번호';
COMMENT ON COLUMN REVIEW.PERFO_NO IS '공연번호';
COMMENT ON COLUMN REVIEW.CONTENT IS '리뷰내용';
COMMENT ON COLUMN REVIEW.WRITE_DATE IS '작성일';

CREATE SEQUENCE SEQ_REVIEWNO
NOCACHE;

--------------------------------------------------
----------------  대관 관련	 ---------------------
--------------------------------------------------
CREATE TABLE RENTSYSTEM (
	RENTAL_CODE	NUMBER PRIMARY KEY,
    USER_ID	    VARCHAR2(50) NOT NULL,
	PERFO_NO	NUMBER		 NOT NULL,
	HALL_STATUS	VARCHAR2(10) DEFAULT '대관중' CHECK (HALL_STATUS IN('대관중','대관종료')),
    FOREIGN KEY (RENTAL_CODE) REFERENCES RENTAPPLICATION (RENTAL_CODE),
    FOREIGN KEY (PERFO_NO) REFERENCES PERFORMANCE (PERFO_NO),
    FOREIGN KEY (USER_ID) REFERENCES MEMBER (USER_ID)
);
COMMENT ON COLUMN RENTSYSTEM.RENTAL_CODE IS '대관예약코드';
COMMENT ON COLUMN RENTSYSTEM.RENTAL_CODE IS '회원아이디';
COMMENT ON COLUMN RENTSYSTEM.PERFO_NO IS '공연번호';
COMMENT ON COLUMN RENTSYSTEM.HALL_STATUS IS '대관상태';

--------------------------------------------------
----------------  좌석 관련	 ---------------------
--------------------------------------------------
CREATE TABLE SEAT (
	SEAT_NO	NUMBER PRIMARY KEY,
	HALL_NAME	VARCHAR2(50) NOT NULL,
	SEAT_TIER	VARCHAR2(20) NOT NULL,
	SEAT_PRICE	NUMBER NOT NULL,
	SEAT_STATUS	VARCHAR2(1) DEFAULT 'Y' CHECK (SEAT_STATUS IN('Y', 'N')),
    FOREIGN KEY (HALL_NAME) REFERENCES HALL (HALL_NAME)
);
COMMENT ON COLUMN SEAT.SEAT_NO IS '좌석코드';
COMMENT ON COLUMN SEAT.HALL_NAME IS '공연홀이름';
COMMENT ON COLUMN SEAT.SEAT_TIER IS '좌석등급';
COMMENT ON COLUMN SEAT.SEAT_PRICE IS '좌석가격';
COMMENT ON COLUMN SEAT.SEAT_STATUS IS '좌석상태';

CREATE SEQUENCE SEQ_SEATNO
NOCACHE;

--------------------------------------------------
----------------  결제 관련	 ---------------------
--------------------------------------------------
CREATE TABLE PAYMENT (
	PAYMENT_NO	NUMBER PRIMARY KEY,
    USER_ID	    VARCHAR2(50) NOT NULL,
	PAYMENT_METHOD VARCHAR2(50) NOT NULL,
	PAYMENT_DATE DATE DEFAULT SYSDATE,
	PAYMENT_STATUS VARCHAR2(20)	DEFAULT '결제대기' CHECK (PAYMENT_STATUS IN('결제대기','결제완료')),
	PAYMENT_AMOUNT NUMBER NOT NULL,
	DEPOSIT_NAME VARCHAR2(20) NULL,
	DEPOSIT_BANK VARCHAR2(20) NULL,
	CARDCO_NAME	VARCHAR2(20) NULL,
	CARD_NO	NUMBER NULL,
    FOREIGN KEY (USER_ID) REFERENCES MEMBER (USER_ID)
);
COMMENT ON COLUMN PAYMENT.PAYMENT_NO IS '결제코드';
COMMENT ON COLUMN PAYMENT.USER_ID IS '회원아이디';
COMMENT ON COLUMN PAYMENT.PAYMENT_METHOD IS '결제수단';
COMMENT ON COLUMN PAYMENT.PAYMENT_DATE IS '결제일';
COMMENT ON COLUMN PAYMENT.PAYMENT_STATUS IS '결제상태';
COMMENT ON COLUMN PAYMENT.PAYMENT_AMOUNT IS '결제금액';
COMMENT ON COLUMN PAYMENT.DEPOSIT_NAME IS '입금자명';
COMMENT ON COLUMN PAYMENT.DEPOSIT_BANK IS '입금은행';
COMMENT ON COLUMN PAYMENT.CARDCO_NAME IS '카드회사';
COMMENT ON COLUMN PAYMENT.CARD_NO IS '카드번호';

CREATE SEQUENCE SEQ_PAYNO
NOCACHE;

--------------------------------------------------
----------------  예매 관련	 ---------------------
--------------------------------------------------
CREATE TABLE PURCHASE (
	PURCHASE_NO	NUMBER PRIMARY KEY,
	USER_ID	    VARCHAR2(50) NOT NULL,
	RENTAL_CODE	NUMBER NOT NULL,
	SEAT_NO	    NUMBER NOT NULL,
    PAYMENT_NO	NUMBER NOT NULL,
	CUSTOMERSERVICE_STATUS	VARCHAR2(20) NULL,
	PURCHASE_DATE DATE DEFAULT SYSDATE,
	RESERVATION_DATE DATE DEFAULT SYSDATE,
    TOTAL_PRICE	NUMBER NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES MEMBER(USER_ID),
    FOREIGN KEY (RENTAL_CODE) REFERENCES RENTSYSTEM (RENTAL_CODE),
    FOREIGN KEY (PAYMENT_NO) REFERENCES PAYMENT (PAYMENT_NO),
    FOREIGN KEY (SEAT_NO) REFERENCES SEAT (SEAT_NO)
);
COMMENT ON COLUMN PURCHASE.PURCHASE_NO IS '예매코드';
COMMENT ON COLUMN PURCHASE.USER_ID IS '회원아이디';
COMMENT ON COLUMN PURCHASE.RENTAL_CODE IS '대관예약코드';
COMMENT ON COLUMN PURCHASE.SEAT_NO IS '좌석코드';
COMMENT ON COLUMN PURCHASE.PAYMENT_NO IS '결제코드';
COMMENT ON COLUMN PURCHASE.CUSTOMERSERVICE_STATUS IS 'CS상태';
COMMENT ON COLUMN PURCHASE.PURCHASE_DATE IS '구매날짜';
COMMENT ON COLUMN PURCHASE.RESERVATION_DATE IS '예약날짜';
COMMENT ON COLUMN PURCHASE.TOTAL_PRICE IS '총 가격';

CREATE SEQUENCE SEQ_PURCHASENO
NOCACHE;


COMMIT;




























